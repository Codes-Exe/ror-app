{"version":3,"sources":["vendor/ember-cli/tests-prefix.js","ror-app/tests/integration/components/application-footer-test.js","ror-app/tests/integration/components/application-header-test.js","ror-app/tests/integration/components/application-sidebar-test.js","ror-app/tests/integration/components/organization-item-test.js","ror-app/tests/integration/components/page-numbers-test.js","ror-app/tests/lint/app.lint-test.js","ror-app/tests/lint/templates.template.lint-test.js","ror-app/tests/lint/tests.lint-test.js","ror-app/tests/test-helper.js","ror-app/tests/unit/models/organization-test.js","ror-app/tests/unit/routes/organizations-test.js","ror-app/tests/unit/serializers/application-test.js","vendor/ember-cli/app-config.js","vendor/ember-cli/tests-suffix.js"],"sourcesContent":["'use strict';\n","// import { module, test } from 'qunit';\n// import { setupRenderingTest } from 'ember-qunit';\n// import { render } from '@ember/test-helpers';\n// import hbs from 'htmlbars-inline-precompile';\n// module('Integration | Component | application-footer', function(hooks) {\n//   setupRenderingTest(hooks);\n//   test('it renders', async function(assert) {\n//     // Set any properties with this.set('myProperty', 'value');\n//     // Handle any actions with this.set('myAction', function(val) { ... });\n//     await render(hbs`{{application-footer}}`);\n//     assert.equal(this.element.textContent.trim(), 'The content of this site is licensed under a Creative Commons Attribution 4.0 International License.');\n//   });\n// });\ndefine(\"ror-app/tests/integration/components/application-footer-test\", [], function () {\n  \"use strict\";\n});","define(\"ror-app/tests/integration/components/application-header-test\", [\"qunit\", \"ember-qunit\", \"@ember/test-helpers\"], function (_qunit, _emberQunit, _testHelpers) {\n  \"use strict\";\n\n  (0, _qunit.module)('Integration | Component | application-header', function (hooks) {\n    (0, _emberQunit.setupRenderingTest)(hooks);\n    (0, _qunit.test)('it renders', async function (assert) {\n      // Set any properties with this.set('myProperty', 'value');\n      // Handle any actions with this.set('myAction', function(val) { ... });\n      await (0, _testHelpers.render)(Ember.HTMLBars.template({\n        \"id\": \"t9eVh+5s\",\n        \"block\": \"{\\\"symbols\\\":[],\\\"statements\\\":[[1,[21,\\\"application-header\\\"],false]],\\\"hasEval\\\":false}\",\n        \"meta\": {}\n      }));\n      assert.equal(this.element.textContent.trim(), '');\n    });\n  });\n});","// import { module, test } from 'qunit';\n// import { setupRenderingTest } from 'ember-qunit';\n// import { render } from '@ember/test-helpers';\n// import hbs from 'htmlbars-inline-precompile';\n// module('Integration | Component | application-sidebar', function(hooks) {\n//   setupRenderingTest(hooks);\n//   test('it renders', async function(assert) {\n//     // Set any properties with this.set('myProperty', 'value');\n//     // Handle any actions with this.set('myAction', function(val) { ... });\n//     await render(hbs`{{application-sidebar}}`);\n//     assert.equal(this.element.textContent.trim(), 'ROR');\n//   });\n// });\ndefine(\"ror-app/tests/integration/components/application-sidebar-test\", [], function () {\n  \"use strict\";\n});","// import { module, test } from 'qunit';\n// import { setupRenderingTest } from 'ember-qunit';\n// import { render } from '@ember/test-helpers';\n// import hbs from 'htmlbars-inline-precompile';\n// module('Integration | Component | organization-item', function(hooks) {\n//   setupRenderingTest(hooks);\n//   test('it renders', async function(assert) {\n//     // Set any properties with this.set('myProperty', 'value');\n//     // Handle any actions with this.set('myAction', function(val) { ... });\n//     await render(hbs`{{organization-item}}`);\n//     assert.equal(this.element.textContent.trim(), '');\n//   });\n// });\ndefine(\"ror-app/tests/integration/components/organization-item-test\", [], function () {\n  \"use strict\";\n});","// import { module, test } from 'qunit';\n// import { setupRenderingTest } from 'ember-qunit';\n// import { render } from '@ember/test-helpers';\n// import hbs from 'htmlbars-inline-precompile';\n// module('Integration | Component | page-numbers', function(hooks) {\n//   setupRenderingTest(hooks);\n//   test('it renders', async function(assert) {\n//     // Set any properties with this.set('myProperty', 'value');\n//     // Handle any actions with this.set('myAction', function(val) { ... });\n//     await render(hbs`{{page-numbers}}`);\n//     assert.equal(this.element.textContent.trim(), '');\n//   });\n// });\ndefine(\"ror-app/tests/integration/components/page-numbers-test\", [], function () {\n  \"use strict\";\n});","define(\"ror-app/tests/lint/app.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | app');\n  QUnit.test('adapters/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('adapters/organization.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'adapters/organization.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('app.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'app.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/application-footer.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/application-footer.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/application-header.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/application-header.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/application-sidebar.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/application-sidebar.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/organization-item.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/organization-item.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('components/page-numbers.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'components/page-numbers.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/organizations.js/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/organizations.js/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('controllers/organizations.js/show.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'controllers/organizations.js/show.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('formats.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'formats.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('models/organization.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'models/organization.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('resolver.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'resolver.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('router.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'router.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/application.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/organizations.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/organizations.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/organizations/index.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/organizations/index.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('routes/organizations/show.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'routes/organizations/show.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('serializers/application.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'serializers/application.js should pass ESLint\\n\\n');\n  });\n});","define(\"ror-app/tests/lint/templates.template.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('TemplateLint');\n  QUnit.test('ror-app/templates/application.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/application.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/components/application-footer.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/components/application-footer.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/components/application-header.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/components/application-header.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/components/application-sidebar.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/components/application-sidebar.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/components/organization-item.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/components/organization-item.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/components/page-numbers.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/components/page-numbers.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/organizations.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/organizations.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/organizations/index.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/organizations/index.hbs should pass TemplateLint.\\n\\n');\n  });\n  QUnit.test('ror-app/templates/organizations/show.hbs', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'ror-app/templates/organizations/show.hbs should pass TemplateLint.\\n\\n');\n  });\n});","define(\"ror-app/tests/lint/tests.lint-test\", [], function () {\n  \"use strict\";\n\n  QUnit.module('ESLint | tests');\n  QUnit.test('integration/components/application-footer-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/application-footer-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/application-header-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/application-header-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/application-sidebar-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/application-sidebar-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/organization-item-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/organization-item-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('integration/components/page-numbers-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'integration/components/page-numbers-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('test-helper.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/models/organization-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/models/organization-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/routes/organizations-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/organizations-test.js should pass ESLint\\n\\n');\n  });\n  QUnit.test('unit/serializers/application-test.js', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/serializers/application-test.js should pass ESLint\\n\\n');\n  });\n});","define(\"ror-app/tests/test-helper\", [\"ror-app/app\", \"ror-app/config/environment\", \"@ember/test-helpers\", \"ember-qunit\"], function (_app, _environment, _testHelpers, _emberQunit) {\n  \"use strict\";\n\n  (0, _testHelpers.setApplication)(_app.default.create(_environment.default.APP));\n  (0, _emberQunit.start)();\n});","define(\"ror-app/tests/unit/models/organization-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Model | organization', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let model = store.createRecord('organization', {});\n      assert.ok(model);\n    });\n  });\n});","define(\"ror-app/tests/unit/routes/organizations-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Route | organizations', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks);\n    (0, _qunit.test)('it exists', function (assert) {\n      let route = this.owner.lookup('route:organizations');\n      assert.ok(route);\n    });\n  });\n});","define(\"ror-app/tests/unit/serializers/application-test\", [\"qunit\", \"ember-qunit\"], function (_qunit, _emberQunit) {\n  \"use strict\";\n\n  (0, _qunit.module)('Unit | Serializer | application', function (hooks) {\n    (0, _emberQunit.setupTest)(hooks); // Replace this with your real tests.\n\n    (0, _qunit.test)('it exists', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let serializer = store.serializerFor('organization');\n      assert.ok(serializer);\n    });\n    (0, _qunit.test)('it serializes records', function (assert) {\n      let store = this.owner.lookup('service:store');\n      let record = store.createRecord('organization', {});\n      let serializedRecord = record.serialize();\n      assert.ok(serializedRecord);\n    });\n  });\n});","define('ror-app/config/environment', [], function() {\n  var prefix = 'ror-app';\ntry {\n  var metaName = prefix + '/config/environment';\n  var rawConfig = document.querySelector('meta[name=\"' + metaName + '\"]').getAttribute('content');\n  var config = JSON.parse(unescape(rawConfig));\n\n  var exports = { 'default': config };\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n}\ncatch(err) {\n  throw new Error('Could not read config from meta tag with name \"' + metaName + '\".');\n}\n\n});\n","require('ror-app/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n"],"names":[],"mappings":"AAAA;;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC/EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvCA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;","file":"tests.js"}